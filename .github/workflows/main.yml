"""Этот файл я попросил подкаректировать у ии."""

name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install flake8
          pip install -r backend/requirements.txt

      - name: Lint code with flake8
        run: flake8 backend/

      - name: Run backend tests
        run: |
          cd backend
          python manage.py test

      - name: Run frontend tests
        run: |
          cd frontend
          npm install
          npm test

      - name: Build and push Docker images
        run: |
          echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/kittygram_backend ./backend
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/kittygram_frontend ./frontend
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/kittygram_gateway ./nginx
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/kittygram_backend
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/kittygram_frontend
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/kittygram_gateway

      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/kittygram/
            docker-compose pull
            docker-compose up -d --build
            docker-compose exec backend python manage.py migrate --noinput
            docker-compose exec backend python manage.py collectstatic --noinput

      - name: Send Telegram notification
        uses: appleboy/telegram-action@v0.2.5
        with:
          token: ${{ secrets.TELEGRAM_TOKEN }}
          chat-id: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: 'Kittygram deployed successfully!'
